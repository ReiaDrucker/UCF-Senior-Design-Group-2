diff --git a/modules/sfm/CMakeLists.txt b/modules/sfm/CMakeLists.txt
index 53a8d437..7e11c8ef 100644
--- a/modules/sfm/CMakeLists.txt
+++ b/modules/sfm/CMakeLists.txt
@@ -5,10 +5,8 @@ set(the_description "SFM algorithms")
 ### LIBMV LIGHT EXTERNAL DEPENDENCIES ###
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")
 find_package(Gflags QUIET)
-find_package(Ceres QUIET)
-if(NOT Ceres_FOUND)  # Looks like Ceres find glog on the own, so separate search isn't necessary
-  find_package(Glog QUIET)
-endif()
+# find_package(Glog QUIET)
+find_package(Ceres REQUIRED)
 
 if((gflags_FOUND OR GFLAGS_FOUND OR GFLAGS_INCLUDE_DIRS) AND (glog_FOUND OR GLOG_FOUND OR GLOG_INCLUDE_DIRS))
   set(_fname "${CMAKE_CURRENT_BINARY_DIR}/test_sfm_deps.cpp")
@@ -54,23 +52,12 @@ set(LIBMV_LIGHT_LIBS
   ${GFLAGS_LIBRARIES}
 )
 
-if(Ceres_FOUND)
-  add_definitions("-DCERES_FOUND=1")
-  list(APPEND LIBMV_LIGHT_LIBS simple_pipeline)
-  list(APPEND LIBMV_LIGHT_INCLUDES "${CERES_INCLUDE_DIR}")
-else()
-  add_definitions("-DCERES_FOUND=0")
-  message(STATUS "CERES support is disabled. Ceres Solver for reconstruction API is required.")
-endif()
+add_definitions("-DCERES_FOUND=1")
+list(APPEND LIBMV_LIGHT_LIBS simple_pipeline)
 
 ### COMPILE WITH C++11 IF CERES WAS COMPILED WITH C++11
 
-if(Ceres_FOUND)
-  list (FIND CERES_COMPILED_COMPONENTS "C++11" _index)
-  if (${_index} GREATER -1)
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
-  endif()
-endif()
+set(CMAKE_CXX_STANDARD 20)
 
 ### DEFINE OPENCV SFM MODULE DEPENDENCIES ###
 
@@ -85,7 +72,6 @@ ocv_add_module(sfm
   WRAP python
 )
 
-
 ocv_warnings_disable(CMAKE_CXX_FLAGS
   -Wundef
   -Wshadow
@@ -137,6 +123,4 @@ ocv_add_accuracy_tests()
 
 ### CREATE OPENCV SFM SAMPLES ###
 
-if(Ceres_FOUND)
-  ocv_add_samples(opencv_viz)
-endif ()
+ocv_add_samples(opencv_viz)
diff --git a/modules/sfm/src/libmv_light/libmv/correspondence/CMakeLists.txt b/modules/sfm/src/libmv_light/libmv/correspondence/CMakeLists.txt
index eef1f243..a20f2939 100644
--- a/modules/sfm/src/libmv_light/libmv/correspondence/CMakeLists.txt
+++ b/modules/sfm/src/libmv_light/libmv/correspondence/CMakeLists.txt
@@ -9,9 +9,9 @@ FILE(GLOB CORRESPONDENCE_HDRS *.h)
 ADD_LIBRARY(correspondence STATIC ${CORRESPONDENCE_SRC} ${CORRESPONDENCE_HDRS})
 
 TARGET_LINK_LIBRARIES(correspondence LINK_PRIVATE ${GLOG_LIBRARY} multiview)
+
 IF(TARGET Eigen3::Eigen)
   TARGET_LINK_LIBRARIES(correspondence LINK_PUBLIC Eigen3::Eigen)
 ENDIF()
 
-
 LIBMV_INSTALL_LIB(correspondence)
